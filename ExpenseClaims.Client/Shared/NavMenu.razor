@using Blazored.LocalStorage;
@using ExpenseClaims.Client.Services.Base;
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">ExpenseClaims.Client</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <AuthorizeView>
            <NotAuthorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
            </NotAuthorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="expenseClaimList">
                        <span class="oi oi-plus" aria-hidden="true"></span> Expense Claim
                    </NavLink>
                </li>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                @if (Roles != null && Roles.Value.Contains("SuperAdmin"))
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="expenseCategoryList">
                            <span class="oi oi-plus" aria-hidden="true"></span> Expense Category
                        </NavLink>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="currencyList">
                            <span class="oi oi-plus" aria-hidden="true"></span> Currency
                        </NavLink>
                    </li>
                }
            </Authorized>
        </AuthorizeView>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private ClaimsPrincipal AuthenticationStateProviderUser { get; set; }

    private Claim Roles { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        AuthenticationState authenticationState;

        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        this.AuthenticationStateProviderUser = authenticationState.User;

        Roles = AuthenticationStateProviderUser.Claims.FirstOrDefault(c => c.Type=="roles");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
